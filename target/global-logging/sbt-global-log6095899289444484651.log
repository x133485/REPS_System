[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\韩宗朔\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\韩宗朔\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.11 (Oracle Corporation Java 21.0.1)
[debug] Load.defaultLoad until apply took 56.7013ms
[debug]           Load.loadUnit: plugins took 59.8721ms
[debug]           Load.loadUnit: defsScala took 0.1252ms
[debug] [Loading] Scanning directory E:\学习\大三上学期\algorithms\Renewable Energy Plant System_Scala\WindForecastSystem\project
[debug]             Load.loadUnit: mkEval took 2.8685ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\学习\大三上学期\algorithms\Renewable Energy Plant System_Scala\WindForecastSystem\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 8.4413 ms
[info] loading settings for project windforecastsystem-build from idea.sbt...
[debug]               Load.resolveProject(windforecastsystem-build) took 23.4642ms
[debug]             Load.loadTransitive: finalizeProject(Project(id windforecastsystem-build, base: E:\学习\大三上学期\algorithms\Renewable Energy Plant System_Scala\WindForecastSystem\project, plugins: List(<none>))) took 41.8918ms
[debug] [Loading] Done in E:\学习\大三上学期\algorithms\Renewable Energy Plant System_Scala\WindForecastSystem\project, returning: (windforecastsystem-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 189.7659ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.1142ms
[debug]         Load.loadUnit(file:/E:/学习/大三上学期/algorithms/Renewable%20Energy%20Plant%20System_Scala/WindForecastSystem/project/, ...) took 259.418ms
[debug]       Load.apply: load took 336.7151ms
[debug]       Load.apply: resolveProjects took 3.6103ms
[debug]       Load.apply: finalTransforms took 71.1431ms
[debug]       Load.apply: config.delegates took 7.3938ms
[debug]       Load.apply: Def.make(settings)... took 409.4632ms
[debug]       Load.apply: structureIndex took 124.298ms
[debug]       Load.apply: mkStreams took 4.497ms
[info] loading project definition from E:\学习\大三上学期\algorithms\Renewable Energy Plant System_Scala\WindForecastSystem\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2312.809ms
[debug]     Load.loadUnit: defsScala took 0.0041ms
[debug] [Loading] Scanning directory E:\学习\大三上学期\algorithms\Renewable Energy Plant System_Scala\WindForecastSystem
[debug]       Load.loadUnit: mkEval took 0.2644ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.1278 ms
[info] loading settings for project root from build.sbt...
[debug]         Load.resolveProject(root) took 75.3736ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: E:\学习\大三上学期\algorithms\Renewable Energy Plant System_Scala\WindForecastSystem, plugins: List(<none>))) took 79.1821ms
[debug] [Loading] Done in E:\学习\大三上学期\algorithms\Renewable Energy Plant System_Scala\WindForecastSystem, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2213.5703ms
[debug]     Load.loadUnit: cleanEvalClasses took 17.499ms
[debug]   Load.loadUnit(file:/E:/学习/大三上学期/algorithms/Renewable%20Energy%20Plant%20System_Scala/WindForecastSystem/, ...) took 4545.0954ms
[debug] Load.apply: load took 4566.4791ms
[debug] Load.apply: resolveProjects took 0.1892ms
[debug] Load.apply: finalTransforms took 35.3531ms
[debug] Load.apply: config.delegates took 0.2552ms
[debug] Load.apply: Def.make(settings)... took 99.4824ms
[debug] Load.apply: structureIndex took 20.2744ms
[debug] Load.apply: mkStreams took 0.0019ms
[info] set current project to WindForecastSystem (in build file:/E:/学习/大三上学期/algorithms/Renewable%20Energy%20Plant%20System_Scala/WindForecastSystem/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 14650 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 14650, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to WindForecastSystem (in build file:/E:/学习/大三上学期/algorithms/Renewable%20Energy%20Plant%20System_Scala/WindForecastSystem/)
[debug] > Exec(idea-shell, None, None)
